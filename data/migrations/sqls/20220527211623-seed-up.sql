/* Replace with your SQL commands */

--Create Location Table

CREATE TABLE public.location
(
    location_id  integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 10 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    name character varying COLLATE pg_catalog."default",
    CONSTRAINT location_pkey PRIMARY KEY (location_id)
)

TABLESPACE pg_default;

ALTER TABLE public.location
    OWNER to postgres;

	---------

INSERT INTO public.location VALUES (1,'Logan Square');
INSERT INTO public.location VALUES (2,'Little Italy');
INSERT INTO public.location VALUES (3,'Uptown');
INSERT INTO public.location VALUES (4,'Andersonville');
INSERT INTO public.location VALUES (5,'Wicker Park');

--Create Product Type Table

CREATE TABLE public.product_type
(
    product_type_id  integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 10 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    name character varying COLLATE pg_catalog."default",
    CONSTRAINT product_type_pkey PRIMARY KEY (product_type_id)
)

TABLESPACE pg_default;

ALTER TABLE public.product_type
    OWNER to postgres;

INSERT INTO public.product_type VALUES (1,'Produce');
INSERT INTO public.product_type VALUES (2,'Handmade Goods');
INSERT INTO public.product_type VALUES (3,'Prepared Food');

--Create Product Table

CREATE TABLE public.product
(
    product_id  integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 10 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    product_type_id integer,
    name character varying COLLATE pg_catalog."default",
    CONSTRAINT produce_pkey PRIMARY KEY (product_id),
    CONSTRAINT product_product_type_fkey FOREIGN KEY (product_type_id)
        REFERENCES public.product_type (product_type_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
        NOT VALID
)

TABLESPACE pg_default;

ALTER TABLE public.product
    OWNER to postgres;

INSERT INTO public.product VALUES (1,	1,	'Apples');
INSERT INTO public.product VALUES (2,	1,	'Butternut Squash');
INSERT INTO public.product VALUES (3,	1,	'Cucumbers');
INSERT INTO public.product VALUES (4,	1,	'Tomatoes');
INSERT INTO public.product VALUES (5,	3,	'Fresh Pasta');
INSERT INTO public.product VALUES (6,	2,	'Macrame Planters');
INSERT INTO public.product VALUES (7,	2,	'Goat Milk Soap');

--Create Vendor Table

CREATE TABLE public.vendor
(
    vendor_id  integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 10 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    name character varying COLLATE pg_catalog."default",
    email character varying COLLATE pg_catalog."default",
    description character varying COLLATE pg_catalog."default",
    CONSTRAINT vendor_pkey PRIMARY KEY (vendor_id)
)

TABLESPACE pg_default;

ALTER TABLE public.vendor
    OWNER to postgres;

INSERT INTO public.vendor VALUES (1,'Giussepe''s Italian Goods','giussepe@farmersmarket.com','A popular stall featuring fresh pasta and high-quality ingredients.');
INSERT INTO public.vendor VALUES (2,'The Green Fairy','satine@farmersmarket.com','A trendy stall featuring handmade wares.');
INSERT INTO public.vendor VALUES (3,'The Family Farm','familyfarm@farmersmarket.com','Fresh, organic produce.');

--Create Vendor Location Join Table

CREATE TABLE public.vendor_location
(
    vendor_id integer NOT NULL,
    location_id integer NOT NULL,
    CONSTRAINT vendor_location_pkey PRIMARY KEY (vendor_id, location_id),
    CONSTRAINT vendor_location_location_fkey FOREIGN KEY (location_id)
        REFERENCES public.location (location_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT vendor_location_vendor_fkey FOREIGN KEY (vendor_id)
        REFERENCES public.vendor (vendor_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)

TABLESPACE pg_default;

ALTER TABLE public.vendor_location
    OWNER to postgres;

COMMENT ON CONSTRAINT vendor_location_location_fkey ON public.vendor_location
    IS '@manyToManyFieldName locations';
COMMENT ON CONSTRAINT vendor_location_vendor_fkey ON public.vendor_location
    IS '@manyToManyFieldName vendors';


	INSERT INTO public.vendor_location VALUES (1,1);
	INSERT INTO public.vendor_location VALUES (1,2);
	INSERT INTO public.vendor_location VALUES (1,3);
	INSERT INTO public.vendor_location VALUES (2,1);
	INSERT INTO public.vendor_location VALUES (2,5);
	INSERT INTO public.vendor_location VALUES (3,3);
	INSERT INTO public.vendor_location VALUES (3,4);
	INSERT INTO public.vendor_location VALUES (3,5);


--Create Vendor Product Join Table

CREATE TABLE public.vendor_product
(
    vendor_id integer NOT NULL,
    product_id integer NOT NULL,
    CONSTRAINT vendor_product_pkey PRIMARY KEY (vendor_id, product_id),
    CONSTRAINT vendor_product_product_fkey FOREIGN KEY (product_id)
        REFERENCES public.product (product_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT vendor_product_vendor_fkey FOREIGN KEY (vendor_id)
        REFERENCES public.vendor (vendor_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)

TABLESPACE pg_default;

ALTER TABLE public.vendor_product
    OWNER to postgres;

COMMENT ON CONSTRAINT vendor_product_product_fkey ON public.vendor_product
    IS '@manyToManyFieldName products';
COMMENT ON CONSTRAINT vendor_product_vendor_fkey ON public.vendor_product
    IS '@manyToManyFieldName vendors';

INSERT INTO public.vendor_product VALUES (1,4);
INSERT INTO public.vendor_product VALUES (1,5);

INSERT INTO public.vendor_product VALUES (2,6);
INSERT INTO public.vendor_product VALUES (2,7);

INSERT INTO public.vendor_product VALUES (3,1);
INSERT INTO public.vendor_product VALUES (3,2);
INSERT INTO public.vendor_product VALUES (3,3);
INSERT INTO public.vendor_product VALUES (3,4);


--Add Smart Comment
comment on constraint vendor_product_vendor_fkey on public."vendor_product" is E'@manyToManyFieldName vendors\n @manyToManySimpleFieldName testingList123';
comment on constraint vendor_location_vendor_fkey on public."vendor_location" is E'@manyToManyFieldName vendors';
comment on constraint vendor_location_location_fkey on public."vendor_location" is E'@manyToManyFieldName locations';
comment on constraint vendor_product_product_fkey on public."vendor_product" is E'@manyToManyFieldName products';